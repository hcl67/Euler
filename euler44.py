'''
Project Euler Problem #44

Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70  22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk  Pj| is minimised; what is the value of D?
'''
import math
def ispennum(n):
    k=math.ceil(math.sqrt(n*2/3))
    if k*(3*k-1)/2==n:
        return 1
    else:
        return 0


'''
while 1:
    newp=n*(3*n-1)//2
    if len(rlst)>0 and min(rlst)<(newp-plst[0]):
        break
    for i in plst:
        if len(rlst)>0 and min(rlst)<(newp-i):
            break
        if ispennum(newp-i)==1 and ispennum(newp+i)==1:
            rlst.append(newp-i)
            print(n,newp,i,newp-i)
            break
    plst=[newp]+plst
    n+=1

while 1:
    d=(3*n*n-n)//2
    for i in range(1,(d+1)//3):
        if ispennum((3*i*i-i)//2+d)==1:
            if ispennum(3*i*i-i+d)==1:
                print(d)
                break
    n+=1
    print(n)
'''

def find():
    i=1
    while 1:
        d=(3*i*i-i)//2
        k=0
        while 1:
            k+=1
            if 2*d-3*k*k+k<=0:
                break
            if (2*d-3*k*k+k)%(6*k)!=0:
                continue
            m=(2*d-3*k*k+k)//(6*k)
            n=m+k
            if ispennum((3*m*m-m)//2+(3*n*n-n)//2)==1:
                return d
                
        i+=1
        print(i)
print(find())

